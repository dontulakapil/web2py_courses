(dp1
S'output'
p2
S''
sS'layer'
p3
S'/home/chinna/Desktop/web2py/applications/courses/controllers/default.py'
p4
sS'code'
p5
S'# -*- coding: utf-8 -*- \n\n#########################################################################\n## This is a samples controller\n## - index is the default action of any application\n## - user is required for authentication and authorization\n## - download is for downloading files uploaded in the db (does streaming)\n## - call exposes all registered services (none by default)\n#########################################################################  \n\n#def index():\n #   """\n  #  example action using the internationalization operator T and flash\n   # rendered by views/default/index.html or views/generic.html\n    #"""\n    #response.flash = T(\'Welcome to web2py\')\n    #return dict(message=T(\'Hello World\'))\n\n\ndef user():\n    """\n    exposes:\n    http://..../[app]/default/user/login \n    http://..../[app]/default/user/logout\n    http://..../[app]/default/user/register\n    http://..../[app]/default/user/profile\n    http://..../[app]/default/user/retrieve_password\n    http://..../[app]/default/user/change_password\n    use @auth.requires_login()\n        @auth.requires_membership(\'group name\')\n        @auth.requires_permission(\'read\',\'table name\',record_id)\n    to decorate functions that need access control\n    """\n    return dict(form=auth())\n\n\ndef download():\n    """\n    allows downloading of uploaded files\n    http://..../[app]/default/download/[filename]\n    """\n    return response.download(request,db)\n\n\ndef call():\n    """\n    exposes services. for example:\n    http://..../[app]/default/call/jsonrpc\n    decorate with @services.jsonrpc the functions to expose\n    supports xml, json, xmlrpc, jsonrpc, amfrpc, rss, csv\n    """\n    session.forget()\n    return service()\n\ndef index():\n    courses=db().select(db.courses.ALL)\n    return dict(courses=courses)\ndef insert():\n    form=SQLFORM(db.courses)\n    if form.accepts(request.vars,session):\n        response.flash = \'course is posted\'\n    return(dict(form=form))\ndef show():\n    k=request.args(0)\n    form=db(db.courses.courses_id=k).select()[0]\n    return(dict(form=form))\n\nresponse._vars=response._caller(index)\n'
p6
sS'traceback'
p7
S'Traceback (most recent call last):\n  File "/home/chinna/Desktop/web2py/gluon/restricted.py", line 171, in restricted\n    ccode = compile(code.replace(\'\\r\\n\', \'\\n\'), layer, \'exec\')\n  File "/home/chinna/Desktop/web2py/applications/courses/controllers/default.py", line 65\n    form=db(db.courses.courses_id=k).select()[0]\nSyntaxError: keyword can\'t be an expression\n'
p8
s.